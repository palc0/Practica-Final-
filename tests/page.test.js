// Importamos Puppeteer para controlar Chrome ðŸš€
const puppeteer = require('puppeteer');

// Describe define un grupo de pruebas relacionadas
describe('Pruebas para pÃ¡gina web Hola Mundo ðŸŒŽ', () => {
  let browser;
  let page;

  // Antes de todas las pruebas, lanzamos Puppeteer
  beforeAll(async () => {
    // Inicia Chrome en modo headless (sin interfaz grÃ¡fica)
    browser = await puppeteer.launch({
      headless: true, 
      args: ['--no-sandbox', '--disable-setuid-sandbox']
    });

    // Crea una nueva pestaÃ±a
    page = await browser.newPage();

    // Visita la URL local
    await page.goto('http://localhost:8080');
  });

  // Al final, cerramos el navegador para liberar recursos
  afterAll(async () => {
    await browser.close();
  });

  // Test 1: verificar que el tÃ­tulo de la pÃ¡gina sea correcto
  test('El tÃ­tulo debe ser "Hola Mundo ðŸŒŽ"', async () => {
    const titulo = await page.title();
    expect(titulo).toBe('Hola Mundo ðŸŒŽ');
  });

  // Test 2: verificar que el contenido del h1 es correcto
  test('La pÃ¡gina debe contener un h1 que diga "Â¡Hola Mundo!"', async () => {
    const h1 = await page.$eval('h1', el => el.textContent);
    expect(h1).toBe('Â¡Hola Mundo!');
  });
});
